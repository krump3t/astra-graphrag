# ========================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# ========================================
# This is a TEMPLATE for production deployment.
# Copy to .env and configure with actual production values.

# AstraDB Configuration
# ACTION REQUIRED: Use production AstraDB instance credentials
ASTRA_DB_API_ENDPOINT=<your-production-astra-endpoint>
ASTRA_DB_APPLICATION_TOKEN=<your-production-astra-token>
ASTRA_DB_DATABASE_ID=<your-production-database-id>
ASTRA_DB_KEYSPACE=<your-production-keyspace>
ASTRA_DB_COLLECTION=graph_nodes

# Watsonx Configuration
# ACTION REQUIRED: Use production Watsonx credentials
WATSONX_API_KEY=<your-production-watsonx-api-key>
WATSONX_PROJECT_ID=<your-production-project-id>
WATSONX_URL=https://us-south.ml.cloud.ibm.com
WATSONX_GEN_MODEL_ID=meta-llama/llama-3-3-70b-instruct

# ========================================
# CRITICAL SECURITY CONFIGURATION
# ========================================

# API Key for HTTP endpoint authentication
# ACTION REQUIRED: Generate secure random key using:
#   python -c "import secrets; print(secrets.token_urlsafe(32))"
# NEVER use default or development keys in production!
API_KEY=<generate-secure-key-here>

# ========================================
# CORS Configuration - REQUIRES WATSONX.ORCHESTRATE DOMAINS
# ========================================
# ACTION REQUIRED: Replace with actual Watsonx.orchestrate production domains
# Contact your Watsonx.orchestrate integration team to obtain these domains.
#
# Common patterns (EXAMPLES ONLY - verify with your team):
#   - https://orchestrate.watsonx.ibm.com
#   - https://app.watsonx.orchestrate.ibm.com
#   - https://watsonx.orchestrate.cloud.ibm.com
#   - https://<your-tenant>.orchestrate.watsonx.ibm.com
#
# WARNING: Do NOT include localhost domains in production!
# WARNING: Comma-separated, NO SPACES between domains
ALLOWED_ORIGINS=<production-domain-1>,<production-domain-2>

# ========================================
# Infrastructure Configuration
# ========================================

# Redis URL for rate limiting
# Production: Use managed Redis service or cluster
# Docker Compose: Use service name 'redis'
# Kubernetes: Use Redis service DNS name
REDIS_URL=redis://<production-redis-host>:6379

# ngrok Configuration (optional for production)
# Only needed if using ngrok for public tunnel in production
# For production, typically replaced with actual domain/load balancer
NGROK_AUTHTOKEN=<your-ngrok-token-or-remove-if-not-needed>

# ========================================
# DEPLOYMENT CHECKLIST
# ========================================
# Before deploying to production:
# [ ] Replace all <placeholders> with actual values
# [ ] Verify ALLOWED_ORIGINS contains ONLY production domains
# [ ] Confirm API_KEY is cryptographically secure (32+ bytes)
# [ ] Test CORS from actual Watsonx.orchestrate domain
# [ ] Verify Redis connectivity
# [ ] Run security scan: detect-secrets scan --all-files
# [ ] Run vulnerability scan: pip-audit
# [ ] Validate all environment variables are set
